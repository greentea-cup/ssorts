Семинар 2. Улучшенные методы внутренней сортировки и тестовое покрытие в C++

1. Реализовать следующие улучшенные алгоритмы сортировки:
- Сортировка вставкой с бинарным поиском
- Сортировка шейкером (двунаправленная пузырьковая сортировка)

Каждая сортировка должна быть оформлена в виде отдельной библиотеки.

2. Требования:
- Реализовать каждую сортировку в отдельном .cpp и .h файлах.
- Использовать шаблоны для поддержки различных типов данных (например, int, double).

3. Написать unit тесты:
- Для каждой сортировки создать минимум по 3 теста.
- Покрыть как положительные, так и граничные случаи (например, пустой массив, массив с одним элементом, уже отсортированный массив, массив в обратном порядке).
- Использовать библиотеку для тестирования (например, Google Test, Catch2).

Пример подключения тестов к проекту можно найти в описании к 5 лабе.

4. Рекомендуемая структура проекта:
enhanced_sorting/
   - include/
       - binary_insertion_sort.h
       - shaker_sort.h
   - src/
       - binary_insertion_sort.cpp
       - shaker_sort.cpp
tests/
   - test_binary_insertion_sort.cpp
   - test_shaker_sort.cpp

(Результатом должно стать два проекта: один с улучшенными алгоритмами сортировки, а другой — с модульными тестами в том же решении.)

5. Загрузите решение на GitHub (не забудьте добавить .gitignoreфайл, чтобы избежать загрузки ненужных файлов).

P.S. Можно добавить реализацию в решение с семинаром 1.

Срок выполнения задания: 2 недели.
